{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","id","username","todosWithUser","userId","todoID","usersFromServer","find","App","useState","currentUser","setCurrentUser","currentTitle","setCurrentTitle","isCompleted","setIsCompleted","errorMessageTitle","setErrorMessageTitle","errorMessageUser","setErrorMessageUser","AddTodo","push","Math","max","i","createTodo","action","method","onSubmit","event","preventDefault","length","type","placeholder","value","onChange","target","foundUser","disabled","checked","currentState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a11c6d99.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id=\"1\"\n    className={classNames(\n      'TodoInfo',\n      {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    {todo.user && (\n      <UserInfo user={todo.user} />)}\n\n  </article>\n);\n","import React from 'react';\nimport { Todo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n        data-id={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/todo';\nimport { User } from './types/user';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(todoID: number): User | null {\n  return usersFromServer.find(user => user.id === todoID) || null;\n}\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst createTodo = (title: string, user: User, isCompleted: boolean): Todo => {\n  return {\n    id: Math.max(...todosWithUser.map(i => i.id)) + 1,\n    title,\n    completed: isCompleted,\n    userId: user.id,\n    user,\n  };\n};\n\nexport const App: React.FC = () => {\n  const [currentUser, setCurrentUser] = useState<null | User>(null);\n  const [currentTitle, setCurrentTitle] = useState('');\n  const [isCompleted, setIsCompleted] = useState(false);\n  const [errorMessageTitle, setErrorMessageTitle] = useState(false);\n  const [errorMessageUser, setErrorMessageUser] = useState(false);\n\n  function AddTodo() {\n    if (currentUser) {\n      todosWithUser.push(createTodo(currentTitle, currentUser, isCompleted));\n    }\n  }\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (currentTitle.length <= 0) {\n      setErrorMessageTitle(true);\n    }\n\n    if (!currentUser) {\n      setErrorMessageUser(true);\n    }\n\n    if (!currentUser || currentTitle.length <= 0) {\n      return;\n    }\n\n    AddTodo();\n\n    setErrorMessageTitle(false);\n    setErrorMessageUser(false);\n    setIsCompleted(false);\n    setCurrentTitle('');\n    setCurrentUser(null);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"field__label\">\n            Title\n            <input\n              className=\"field__input\"\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={currentTitle}\n              onChange={event => {\n                if (event.target.value[0] !== ' ') {\n                  setCurrentTitle(event.target.value);\n                  setErrorMessageTitle(false);\n                }\n              }}\n            />\n            {errorMessageTitle && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"field__label\">\n            User\n            <select\n              data-cy=\"userSelect\"\n              className=\"field__select\"\n              value={currentUser ? currentUser.id : 0}\n              onChange={event => {\n                const foundUser = usersFromServer\n                  .find(user => user.id === +event.target.value);\n\n                if (foundUser) {\n                  setCurrentUser(foundUser);\n                }\n\n                setErrorMessageUser(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n            {errorMessageUser && (\n              <span className=\"error\">Please choose a user</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"field__label\">\n            Completed\n            <input\n              type=\"checkbox\"\n              checked={isCompleted}\n              onChange={() => setIsCompleted(currentState => !currentState)}\n            />\n          </label>\n        </div>\n\n        <button\n          className=\"button\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosWithUser} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}